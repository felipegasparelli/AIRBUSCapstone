{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOtgqbCRXVXtLR5VQsfSbvo"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j5ojlq93vbfa","executionInfo":{"status":"ok","timestamp":1707043949485,"user_tz":-60,"elapsed":26536,"user":{"displayName":"Elisabeth Sophie Oeljeklaus","userId":"00043435118037099919"}},"outputId":"02764fed-d025-439d-99e1-91cf5384738b"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["## Principal Component Analysis (PCA) on Flight Data\n","\n","To uncover patterns and reduce the dimensionality of our flight data, we performed Principal Component Analysis (PCA) including the \"leakage\" column alongside other relevant numeric variables. The aim was to understand how \"leakage\" relates to variables like fuel flow, fuel used, and others in the dataset.\n","\n","### Steps Undertaken:\n","1. **Data Selection**: Focused on numeric columns relevant to the flight's fuel metrics and \"leakage\", excluding identifiers such as flight numbers and timestamps.\n","2. **Standardization**: Standardized these variables to have a mean of 0 and a standard deviation of 1, necessary for effective PCA.\n","3. **PCA Execution**: Conducted PCA to reduce the dataset to two principal components for initial analysis, capturing the essence of the dataset in fewer dimensions.\n","4. **Variance Analysis**: Examined the explained variance by each principal component to assess their significance.\n","\n","### Results:\n","- The plot of explained variance indicates how much information each principal component holds.\n","- Further analysis on principal components can reveal patterns and correlations within the flight data, especially regarding the \"leakage\" variable's relationship with other metrics.\n"],"metadata":{"id":"3ePgt9Dev4fo"}},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":507},"id":"qxTIeuooVjTN","executionInfo":{"status":"ok","timestamp":1707044561072,"user_tz":-60,"elapsed":1098,"user":{"displayName":"Elisabeth Sophie Oeljeklaus","userId":"00043435118037099919"}},"outputId":"c6afc878-da7c-469d-bebb-9a12d123b21d"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}],"source":["import pandas as pd\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.decomposition import PCA\n","import matplotlib.pyplot as plt\n","from sklearn.impute import SimpleImputer\n","\n","# Load the dataset\n","data_path = '/content/drive/My Drive/IE/CORPORATE_PROJECT_AIRBUS/02_Notebooks/Lizz-PCA/data_df_V095.csv'\n","df = pd.read_csv(data_path)\n","\n","# Selecting relevant numeric columns (excluding identifier columns like 'UTC_TIME', 'Flight', 'DATE', 'TIME')\n","columns_to_include = ['FUEL_FLOW_ADDED', 'FUEL_USED_ADDED', 'VALUE_FUEL_QTY_ADDED',\n","                      'VALUE_FOB', 'DIFF_FOB_VALUE_FUEL', 'FUEL_USED_FOB', 'FUEL_USED', 'leakage']\n","data_for_pca = df[columns_to_include]\n","\n","# Imputing missing values with the mean\n","imputer = SimpleImputer(strategy='mean')\n","data_imputed = imputer.fit_transform(data_for_pca)\n","\n","# Standardizing the data\n","scaler = StandardScaler()\n","data_standardized = scaler.fit_transform(data_imputed)\n","\n","# Performing PCA\n","pca = PCA(n_components=2)  # Adjust 'n_components' as needed\n","principalComponents = pca.fit_transform(data_standardized)\n","\n","# Creating a DataFrame with the principal components\n","principalDf = pd.DataFrame(data=principalComponents, columns=['Principal Component 1', 'Principal Component 2'])\n","\n","# Explained variance ratio\n","explained_variance = pca.explained_variance_ratio_\n","\n","# Plotting the explained variance\n","plt.figure(figsize=(8,5))\n","plt.bar(range(1, len(explained_variance) + 1), explained_variance, alpha=0.7, align='center', label='Individual explained variance')\n","plt.ylabel('Explained variance ratio')\n","plt.xlabel('Principal components')\n","plt.legend(loc='best')\n","plt.tight_layout()\n","plt.show()\n","\n"]},{"cell_type":"markdown","source":["## Explained Variance Ratio from PCA\n","\n","The bar chart shows the proportion of the dataset's total variance that is captured by each of the first two principal components generated by the PCA.\n","\n","- **Principal Component 1**: This component explains approximately 40% of the variance in the dataset. This suggests that this component captures a significant portion of the information contained in the original variables.\n","- **Principal Component 2**: This component accounts for around 20% of the variance. Although it holds less information than the first component, it still captures a substantial part of the data's structure.\n","\n","Together, the first two principal components explain about 60% of the total variance. This means that by projecting the data onto these two components, we retain 60% of the information from the original dataset.\n","\n","### Next Steps:\n","\n","1. **Review Component Loadings**: Investigate which original variables are most influential on each principal component. This will help us understand what aspects of the data are driving the variance that these components capture.\n","2. **Decide on the Number of Components**: Depending on the level of variance we wish to capture, we may consider using more than two principal components. A common approach is to choose enough components to explain 70-80% of the variance.\n","3. **Interpret Components**: Analyze the components in the context of the data to make meaningful interpretations. This involves understanding the component loadings and what they mean for the original variables, especially the \"leakage\" variable in this case.\n","4. **Use Components for Further Analysis**: The principal components can be used as inputs for further analysis, such as clustering or as features in a predictive model.\n","5. **Communicate Findings**: Prepare a report or presentation to communicate the results of the PCA to stakeholders, focusing on the implications for the \"leakage\" variable and other key metrics in the dataset.\n"],"metadata":{"id":"qxba6KbyyiOW"}},{"cell_type":"code","source":[],"metadata":{"id":"VtzBB0pgv_oh"},"execution_count":null,"outputs":[]}]}